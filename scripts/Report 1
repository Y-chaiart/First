/*
-- Purpose : This report consolidates key customer metrics and behaviors.
Highlights :
1. Gather essential fields such as names, ages and transaction details. 
2. Segment customers into categories such as VIP, Regular, New and age groups. 
3. Aggregate customer-level metrics:
-- Total Orders
-- Total Sales.
-- Total quantity purchased.
-- Total Products.
-- Lifespan (in months)
4. Calculate valuable KPIs :
-- regency(monthe since last order) , avg order value , avg monthly spend.
----------------------------------------------------------------------------------------------------------------------------------------
*/ 
create view gold.report_customers as
with base_query as ( 

select 
s.ord_num,
s.product_key,
s.order_date,
s.sales_amount,
s.quantity,
c.customer_key,
c.customer_number,
concat (c.firstname, ' ' , c.lastname) customer_name,
datediff (year, c.birthdate,  getdate()) age
from gold.fact_sales s
left join gold.dim_customers c
on s.customer_key = s.customer_key
where order_date is not null
),
customer_aggregation as (
select 
customer_key,
customer_number,
customer_name,
age,
count(distinct ord_num) TotalOrders,
sum(sales_amount) TotalSales,
sum(quantity) Totalquantity,
count(distinct (product_key)) Totalproducts,
max(order_date) lastorder_date,
datediff(month, min(order_date), max(order_date)) lifespan
 from base_query
 group by customer_key, customer_name, customer_number, age
 )
select customer_key, 
customer_name, 
customer_number, 
age,
case when age  < 20 then 'Under 20'
		when age between 20 and 29 then '20 - 29'
		when age between 30 and 39 then  '30 - 39'
		when age between 40 and 49 then '40 -  49'
else '50 and above' 
end age_group,
case when Lifespan >= 12 and TotalSales > 5000 then 'VIP'
		when Lifespan >=12 and TotalSales <=5000 then 'Regular'
		else 'New'
end customer_segment,
lastorder_date,
datediff(month, lastorder_date , getdate()) regency,
TotalOrders,
TotalSales,
Totalquantity,
Totalproducts,
lifespan,
-- compute avg order value
case when TotalOrders = 0 then 0
else TotalSales / TotalOrders
end avg_order_value,
-- compute avg monthly spending
case when lifespan = 0 then TotalSales
else TotalSales / lifespan
end avg_monthly_spending
from customer_aggregation

